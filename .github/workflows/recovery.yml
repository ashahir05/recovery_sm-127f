name: Build PBRP
on:
  workflow_dispatch:
    inputs:
      RECOVERY_NAME:
        description: "Name of recovery"
        required: true
        default: "PBRP"
      RECOVERY_URL:
        description: "Recovery location"
        required: true
        default: "https://github.com/PitchBlackRecoveryProject/manifest_pb.git"
      MANIFEST_BRANCH:
        description: "Recovery Branch"
        required: true
        default: "android-12.1"
        type: choice
        options:
          - android-12.1
          - android-11.0
          - android-10.0
          - android-9.0
      DEVICE_TREE:
        description: "Custom Recovery Tree"
        required: true
        default: "https://github.com/ashahir05/twrp_sm-127f"
      DEVICE_TREE_BRANCH:
        description: "Custom Recovery Tree Branch"
        required: true
        default: "main"
      DEVICE_PATH:
        description: "Specify your device path."
        required: true
        default: "device/samsung/a12s"
      DEVICE_NAME:
        description: "Specify your Device Codename."
        required: true
        default: "a12s"
      BUILD_TARGET:
        description: "Specify your Build Target"
        required: true
        default: "recovery"
        type: choice
        options:
          - boot
          - recovery
          - vendorboot

jobs:
  build:
    name: Build PBRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Clean-up
        uses: rokibhasansagar/slimhub_actions@main

      - name: Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Setup
        run: |
          git config --global user.name "Actions Runner"
          git config --global user.email "runner@xyz.com"

          sudo apt install -y gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libncurses5 libtinfo5 libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev python2

          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

          mkdir root && cd root
          repo init --depth=1 -u ${{ github.event.inputs.RECOVERY_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
          repo sync -j$(nproc --all) --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune

      - name: Install OpenJDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "8"

      - name: Clone device tree
        run: |
          cd ${GITHUB_WORKSPACE}/root/
          rm -rf ./${{ github.event.inputs.DEVICE_PATH }}
          git clone ${{ github.event.inputs.DEVICE_TREE }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}

      - name: Restore build cache
        id: ccache-restore
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/ccache
          key: ccache-${{ github.event.inputs.DEVICE_NAME }}-${{ github.event.inputs.RECOVERY_NAME }}-${{ github.event.inputs.MANIFEST_BRANCH }}

      - name: Make ccache dir
        if: steps.ccache-restore.outputs.cache-hit != 'true'
        id: ccache-dir
        run: mkdir ${GITHUB_WORKSPACE}/ccache

      - name: Build recovery
        continue-on-error: true
        run: |
          sudo mkdir /mnt/ccache
          sudo mount --bind ${GITHUB_WORKSPACE}/ccache /mnt/ccache

          cd ${GITHUB_WORKSPACE}/root
          source build/envsetup.sh

          export USE_CCACHE=1
          export CCACHE_EXEC=/usr/bin/ccache
          ccache -M 5G
          export CCACHE_DIR=/mnt/ccache

          export ALLOW_MISSING_DEPENDENCIES='true'

          rm -rf ${GITHUB_WORKSPACE}/root/out
          lunch twrp_${{ github.event.inputs.DEVICE_NAME }}-eng && make clean && mka adbd ${{ github.event.inputs.BUILD_TARGET }}image

      - name: Save build cache
        id: ccache-save
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/ccache
          key: ${{ steps.ccache-restore.outputs.cache-primary-key }}

      - name: Set build date
        run: |
          echo "BUILD_DATE=$(TZ=Asia/Dhaka date +%Y%m%d)" >> $GITHUB_ENV

      - name: Check if recovery exists
        run: |
          cd ${GITHUB_WORKSPACE}/root/
          if [[ -f out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img || -f out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip || -f out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.tar ]]; then
              exit 0
          else
              echo "Recovery out directory is empty."
              exit 1
          fi

      - name: Upload to releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
            out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
            out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.tar
          name: Recovery for ${{ github.event.inputs.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
          tag_name: ${{ github.run_id }}
          body: |
            Build: ${{ github.event.inputs.RECOVERY_NAME }}_${{ github.event.inputs.MANIFEST_BRANCH }}
            Device: ${{ github.event.inputs.DEVICE_NAME }}
