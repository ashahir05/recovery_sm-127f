version: 2.1

parameters:
  recovery-name:
    type: string
    default: "PBRP"
  recovery-url:
    type: string
    default: "https://github.com/PitchBlackRecoveryProject/manifest_pb"
  manifest-branch:
    type: string
    default: "android-12.1"
  device-tree:
    type: string
    default: "https://github.com/ashahir05/twrp_sm-127f"
  device-tree-branch:
    type: string
    default: "main"
  device-path:
    type: string
    default: "devices/samsung/a12s"
  device-name:
    type: string
    default: "a12s"
  target:
    type: string
    default: "recovery"

jobs:
  setup:
    machine:
      image: ubuntu-2204:current
    resource_class: medium

    steps:
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install -y gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache  openjdk-8-jdk lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libncurses5 libtinfo5 libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev python2

      - run:
          name: Fetch repo
          command: |
            git config --global user.name "CI"
            git config --global user.email "CI@xyz.com"

            curl https://storage.googleapis.com/git-repo-downloads/repo > repo
            chmod a+x repo
            sudo mv repo /usr/bin/repo

            mkdir root && cd root
            repo init --depth=1 -u << pipeline.parameters.recovery-url >> -b << pipeline.parameters.manifest-branch >>
            repo sync -j$(nproc --all) --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune

      - run:
          name: Get device tree
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/root
            rm -rf ./<< pipeline.parameters.device-path >>
            git clone << pipeline.parameters.device-tree >> -b << pipeline.parameters.device-tree-branch >> ./<< pipeline.parameters.device-path >>

      - persist_to_workspace:
          root: ${CIRCLE_WORKING_DIRECTORY}
          paths:
            - root

  build:
    machine:
      image: ubuntu-2204:current
    resource_class: large

    steps:
      - attach_workspace:
          at: ${CIRCLE_WORKING_DIRECTORY}
      - restore_cache:
          key: << pipeline.parameters.device-name >>-<< pipeline.parameters.recovery-name >>-<< pipeline.parameters.manifest-branch >>-<< pipeline.parameters.target >>-ccache

      - run:
          name: Build
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/root
            source build/envsetup.sh

            export USE_CCACHE=1
            export CCACHE_EXEC=/usr/bin/ccache
            ccache -M 1G
            export CCACHE_DIR=/mnt/ccache

            export ALLOW_MISSING_DEPENDENCIES=true

            rm -rf ${CIRCLE_WORKING_DIRECTORY}/root/out
            lunch twrp_<< pipeline.parameters.device-name >>-eng && make clean && mka adbd << pipeline.parameters.target >>image

      - persist_to_workspace:
          root: ${CIRCLE_WORKING_DIRECTORY}/root/out/target/product/
          paths:
            - << pipeline.parameters.device-name >>

      - save_cache:
          paths:
            - /mnt/ccache
          key: << pipeline.parameters.device-name >>-<< pipeline.parameters.recovery-name >>-<< pipeline.parameters.manifest-branch >>-<< pipeline.parameters.target >>-ccache

  publish:
    docker:
      - image: ubuntu:latest
    resource_class: small

    steps:
      - attach_workspace:
          at: releases
      - run:
          name: "Publish Release on GitHub"
          command: |
            sudo apt install -y golang-go
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.img
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.tar
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.zip

workflows:
  build-recovery:
    jobs:
      - hold:
          type: approval
      - setup:
          requires:
            - hold
      - build:
          requires:
            - setup
      - publish:
          requires:
            - build
